package erebus.client.model.entity;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

import org.lwjgl.opengl.GL11;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import erebus.entity.EntityWorkerBee;

@SideOnly(Side.CLIENT)
public class ModelWorkerBee extends ModelBase {

	 ModelRenderer Thx;
	    ModelRenderer ThxS;
	    ModelRenderer Ab;
	    ModelRenderer AbF;
	    ModelRenderer AbSide;
	    ModelRenderer AbTop;
	    ModelRenderer AbBack;
	    ModelRenderer Head1;
	    ModelRenderer Head2;
	    ModelRenderer RMandible1;
	    ModelRenderer RMandible2;
	    ModelRenderer LMandible1;
	    ModelRenderer LMandible2;
	    ModelRenderer Eyes;
	    ModelRenderer AntLE;
	    ModelRenderer AntRE;
	    ModelRenderer AntRS;
	    ModelRenderer AntLS;
	    ModelRenderer LBL1;
	    ModelRenderer LBL2;
	    ModelRenderer LBL3;
	    ModelRenderer LBL4;
	    ModelRenderer LML1;
	    ModelRenderer LML2;
	    ModelRenderer LML3;
	    ModelRenderer LML4;
	    ModelRenderer LFL1;
	    ModelRenderer LFL2;
	    ModelRenderer LFL3;
	    ModelRenderer LFL4;
	    ModelRenderer RFL1;
	    ModelRenderer RFL2;
	    ModelRenderer RFL3;
	    ModelRenderer RFL4;
	    ModelRenderer RML1;
	    ModelRenderer RML2;
	    ModelRenderer RML3;
	    ModelRenderer RML4;
	    ModelRenderer RBL1;
	    ModelRenderer RBL2;
	    ModelRenderer RBL3;
	    ModelRenderer RBL4;
	    ModelRenderer Sting;
	    ModelRenderer Head3;
	    ModelRenderer ThxTop;
	    ModelRenderer ThxRW;
	    ModelRenderer ThxLW;
	    ModelRenderer RWingBack;
	    ModelRenderer RWingMid;
	    ModelRenderer RWingFront;
	    ModelRenderer LWingBack;
	    ModelRenderer LWingMid;
	    ModelRenderer LWingFront;


	public ModelWorkerBee() {
		textureWidth = 64;
	    textureHeight = 128;
	    
	      Thx = new ModelRenderer(this, 14, 14);
	      Thx.addBox(-3.5F, -6F, 0F, 7, 9, 8);
	      Thx.setRotationPoint(0F, 17F, 0F);
	      Thx.setTextureSize(64, 32);
	      Thx.mirror = true;
	      setRotation(Thx, 0F, 0F, 0F);
	      ThxS = new ModelRenderer(this, 5, 42);
	      ThxS.addBox(-4.5F, -4.5F, 1F, 9, 6, 6);
	      ThxS.setRotationPoint(0F, 17F, 0F);
	      ThxS.setTextureSize(64, 32);
	      ThxS.mirror = true;
	      setRotation(ThxS, 0F, 0F, 0F);
	      Ab = new ModelRenderer(this, 14, 100);
	      Ab.addBox(-3.5F, -5F, -1F, 7, 8, 11);
	      Ab.setRotationPoint(0F, 17F, 11F);
	      Ab.setTextureSize(64, 32);
	      Ab.mirror = true;
	      setRotation(Ab, -0.0872665F, 0F, 0F);
	      AbF = new ModelRenderer(this, 23, 60);
	      AbF.addBox(-2F, -3F, -5F, 4, 5, 5);
	      AbF.setRotationPoint(0F, 17F, 11F);
	      AbF.setTextureSize(64, 32);
	      AbF.mirror = true;
	      setRotation(AbF, -0.3316126F, 0F, 0F);
	      AbSide = new ModelRenderer(this, 12, 71);
	      AbSide.addBox(-5F, -3.5F, 1F, 10, 5, 8);
	      AbSide.setRotationPoint(0F, 17F, 11F);
	      AbSide.setTextureSize(64, 32);
	      AbSide.mirror = true;
	      setRotation(AbSide, -0.0872665F, 0F, 0F);
	      AbTop = new ModelRenderer(this, 15, 85);
	      AbTop.addBox(-2.5F, -6.5F, 1F, 5, 2, 8);
	      AbTop.setRotationPoint(0F, 17F, 11F);
	      AbTop.setTextureSize(64, 32);
	      AbTop.mirror = true;
	      setRotation(AbTop, -0.0872665F, 0F, 0F);
	      AbBack = new ModelRenderer(this, 22, 121);
	      AbBack.addBox(-2F, -3F, 10F, 4, 5, 2);
	      AbBack.setRotationPoint(0F, 17F, 11F);
	      AbBack.setTextureSize(64, 32);
	      AbBack.mirror = true;
	      setRotation(AbBack, -0.0872665F, 0F, 0F);
	      Head1 = new ModelRenderer(this, 23, 0);
	      Head1.addBox(-2F, -1.5F, -6F, 4, 4, 9);
	      Head1.setRotationPoint(0F, 16F, -1F);
	      Head1.setTextureSize(64, 32);
	      Head1.mirror = true;
	      setRotation(Head1, -0.5235988F, 0F, 0F);
	      Head2 = new ModelRenderer(this, 0, 0);
	      Head2.addBox(-3F, -2.5F, -5F, 6, 8, 5);
	      Head2.setRotationPoint(0F, 16F, -1F);
	      Head2.setTextureSize(64, 32);
	      Head2.mirror = true;
	      setRotation(Head2, -0.5235988F, 0F, 0F);
	      RMandible1 = new ModelRenderer(this, 57, 0);
	      RMandible1.addBox(-2F, 6.5F, -4F, 1, 2, 2);
	      RMandible1.setRotationPoint(0F, 16F, -1F);
	      RMandible1.setTextureSize(64, 32);
	      RMandible1.mirror = true;
	      setRotation(RMandible1, -0.5235988F, 0F, 0F);
	      RMandible2 = new ModelRenderer(this, 57, 12);
	      RMandible2.addBox(-1.5F, 7.5F, -4F, 1, 1, 2);
	      RMandible2.setRotationPoint(0F, 16F, -1F);
	      RMandible2.setTextureSize(64, 32);
	      RMandible2.mirror = true;
	      setRotation(RMandible2, -0.5235988F, 0F, 0F);
	      LMandible1 = new ModelRenderer(this, 50, 0);
	      LMandible1.addBox(1F, 6.5F, -4F, 1, 2, 2);
	      LMandible1.setRotationPoint(0F, 16F, -1F);
	      LMandible1.setTextureSize(64, 32);
	      LMandible1.mirror = true;
	      setRotation(LMandible1, -0.5235988F, 0F, 0F);
	      LMandible2 = new ModelRenderer(this, 50, 12);
	      LMandible2.addBox(0.5F, 7.5F, -4F, 1, 1, 2);
	      LMandible2.setRotationPoint(0F, 16F, -1F);
	      LMandible2.setTextureSize(64, 32);
	      LMandible2.mirror = true;
	      setRotation(LMandible2, -0.5235988F, 0F, 0F);
	      Eyes = new ModelRenderer(this, 0, 32);
	      Eyes.addBox(-4F, -1.5F, -4F, 8, 6, 3);
	      Eyes.setRotationPoint(0F, 16F, -1F);
	      Eyes.setTextureSize(64, 32);
	      Eyes.mirror = true;
	      setRotation(Eyes, -0.5235988F, 0F, 0F);
	      AntLE = new ModelRenderer(this, 47, 17);
	      AntLE.addBox(-1F, -2.5F, -10F, 5, 1, 1);
	      AntLE.setRotationPoint(0F, 16F, -1F);
	      AntLE.setTextureSize(64, 32);
	      AntLE.mirror = true;
	      setRotation(AntLE, 0F, 0F, 1.570796F);
	      AntRE = new ModelRenderer(this, 47, 17);
	      AntRE.addBox(-1F, 1.5F, -10F, 5, 1, 1);
	      AntRE.setRotationPoint(0F, 16F, -1F);
	      AntRE.setTextureSize(64, 32);
	      AntRE.mirror = true;
	      setRotation(AntRE, 0F, 0F, 1.570796F);
	      AntRS = new ModelRenderer(this, 51, 5);
	      AntRS.addBox(-2.5F, 1.5F, -9F, 1, 1, 5);
	      AntRS.setRotationPoint(0F, 16F, -1F);
	      AntRS.setTextureSize(64, 32);
	      AntRS.mirror = true;
	      setRotation(AntRS, -0.3490659F, 0F, 0F);
	      AntLS = new ModelRenderer(this, 51, 5);
	      AntLS.addBox(1.5F, 1.5F, -9F, 1, 1, 5);
	      AntLS.setRotationPoint(0F, 16F, -1F);
	      AntLS.setTextureSize(64, 32);
	      AntLS.mirror = true;
	      setRotation(AntLS, -0.3490659F, 0F, 0F);
	      LBL1 = new ModelRenderer(this, 44, 95);
	      LBL1.addBox(-1F, -1F, -1F, 7, 2, 2);
	      LBL1.setRotationPoint(4F, 18F, 8F);
	      LBL1.setTextureSize(64, 32);
	      LBL1.mirror = true;
	      setRotation(LBL1, 0F, -0.6981317F, -0.3490659F);
	      LBL2 = new ModelRenderer(this, 0, 103);
	      LBL2.addBox(4F, 0F, -1.5F, 3, 5, 3);
	      LBL2.setRotationPoint(4F, 18F, 8F);
	      LBL2.setTextureSize(64, 32);
	      LBL2.mirror = true;
	      setRotation(LBL2, 0F, -0.6981317F, -0.3490659F);
	      LBL3 = new ModelRenderer(this, 0, 82);
	      LBL3.addBox(2.5F, 5.5F, -1F, 3, 4, 2);
	      LBL3.setRotationPoint(4F, 18F, 8F);
	      LBL3.setTextureSize(64, 32);
	      LBL3.mirror = true;
	      setRotation(LBL3, 0F, -0.6981317F, -0.6981317F);
	      LBL4 = new ModelRenderer(this, 0, 70);
	      LBL4.addBox(1.5F, 9F, -0.5F, 1, 3, 1);
	      LBL4.setRotationPoint(4F, 18F, 8F);
	      LBL4.setTextureSize(64, 32);
	      LBL4.mirror = true;
	      setRotation(LBL4, 0F, -0.6981317F, -0.8726646F);
	      LML1 = new ModelRenderer(this, 0, 97);
	      LML1.addBox(0F, -1F, -1F, 4, 2, 2);
	      LML1.setRotationPoint(4F, 18F, 5F);
	      LML1.setTextureSize(64, 32);
	      LML1.mirror = true;
	      setRotation(LML1, 0F, 0F, -0.3490659F);
	      LML2 = new ModelRenderer(this, 0, 89);
	      LML2.addBox(3F, 0F, -1.5F, 2, 4, 3);
	      LML2.setRotationPoint(4F, 18F, 5F);
	      LML2.setTextureSize(64, 32);
	      LML2.mirror = true;
	      setRotation(LML2, 0F, 0F, -0.3490659F);
	      LML3 = new ModelRenderer(this, 0, 75);
	      LML3.addBox(1.5F, 4.5F, -1F, 2, 4, 2);
	      LML3.setRotationPoint(4F, 18F, 5F);
	      LML3.setTextureSize(64, 32);
	      LML3.mirror = true;
	      setRotation(LML3, 0F, 0F, -0.6981317F);
	      LML4 = new ModelRenderer(this, 0, 70);
	      LML4.addBox(0.5F, 8F, -0.5F, 1, 3, 1);
	      LML4.setRotationPoint(4F, 18F, 5F);
	      LML4.setTextureSize(64, 32);
	      LML4.mirror = true;
	      setRotation(LML4, 0F, 0F, -0.8726646F);
	      LFL1 = new ModelRenderer(this, 0, 97);
	      LFL1.addBox(0F, -1F, -1F, 4, 2, 2);
	      LFL1.setRotationPoint(4F, 18F, 2F);
	      LFL1.setTextureSize(64, 32);
	      LFL1.mirror = true;
	      setRotation(LFL1, 0F, 0.6981317F, -0.3490659F);
	      LFL2 = new ModelRenderer(this, 0, 89);
	      LFL2.addBox(3F, 0F, -1.5F, 2, 4, 3);
	      LFL2.setRotationPoint(4F, 18F, 2F);
	      LFL2.setTextureSize(64, 32);
	      LFL2.mirror = true;
	      setRotation(LFL2, 0F, 0.6981317F, -0.3490659F);
	      LFL3 = new ModelRenderer(this, 0, 75);
	      LFL3.addBox(1.5F, 4.5F, -1F, 2, 4, 2);
	      LFL3.setRotationPoint(4F, 18F, 2F);
	      LFL3.setTextureSize(64, 32);
	      LFL3.mirror = true;
	      setRotation(LFL3, 0F, 0.6981317F, -0.6981317F);
	      LFL4 = new ModelRenderer(this, 0, 70);
	      LFL4.addBox(0.5F, 8F, -0.5F, 1, 3, 1);
	      LFL4.setRotationPoint(4F, 18F, 2F);
	      LFL4.setTextureSize(64, 32);
	      LFL4.mirror = true;
	      setRotation(LFL4, 0F, 0.6981317F, -0.8726646F);
	      RFL1 = new ModelRenderer(this, 0, 97);
	      RFL1.addBox(-4F, -1F, -1F, 4, 2, 2);
	      RFL1.setRotationPoint(-4F, 18F, 2F);
	      RFL1.setTextureSize(64, 32);
	      RFL1.mirror = true;
	      setRotation(RFL1, 0F, -0.6981317F, 0.3490659F);
	      RFL2 = new ModelRenderer(this, 0, 89);
	      RFL2.addBox(-5F, 0F, -1.5F, 2, 4, 3);
	      RFL2.setRotationPoint(-4F, 18F, 2F);
	      RFL2.setTextureSize(64, 32);
	      RFL2.mirror = true;
	      setRotation(RFL2, 0F, -0.6981317F, 0.3490659F);
	      RFL3 = new ModelRenderer(this, 0, 75);
	      RFL3.addBox(-3.5F, 4.5F, -1F, 2, 4, 2);
	      RFL3.setRotationPoint(-4F, 18F, 2F);
	      RFL3.setTextureSize(64, 32);
	      RFL3.mirror = true;
	      setRotation(RFL3, 0F, -0.6981317F, 0.6981317F);
	      RFL4 = new ModelRenderer(this, 0, 70);
	      RFL4.addBox(-1.5F, 8F, -0.5F, 1, 3, 1);
	      RFL4.setRotationPoint(-4F, 18F, 2F);
	      RFL4.setTextureSize(64, 32);
	      RFL4.mirror = true;
	      setRotation(RFL4, 0F, -0.6981317F, 0.8726646F);
	      RML1 = new ModelRenderer(this, 0, 97);
	      RML1.addBox(-4F, -1F, -1F, 4, 2, 2);
	      RML1.setRotationPoint(-4F, 18F, 5F);
	      RML1.setTextureSize(64, 32);
	      RML1.mirror = true;
	      setRotation(RML1, 0F, 0F, 0.3490659F);
	      RML2 = new ModelRenderer(this, 0, 89);
	      RML2.addBox(-5F, 0F, -1.5F, 2, 4, 3);
	      RML2.setRotationPoint(-4F, 18F, 5F);
	      RML2.setTextureSize(64, 32);
	      RML2.mirror = true;
	      setRotation(RML2, 0F, 0F, 0.3490659F);
	      RML3 = new ModelRenderer(this, 0, 75);
	      RML3.addBox(-3.5F, 4.5F, -1F, 2, 4, 2);
	      RML3.setRotationPoint(-4F, 18F, 5F);
	      RML3.setTextureSize(64, 32);
	      RML3.mirror = true;
	      setRotation(RML3, 0F, 0F, 0.6981317F);
	      RML4 = new ModelRenderer(this, 0, 70);
	      RML4.addBox(-1.5F, 8F, -0.5F, 1, 3, 1);
	      RML4.setRotationPoint(-4F, 18F, 5F);
	      RML4.setTextureSize(64, 32);
	      RML4.mirror = true;
	      setRotation(RML4, 0F, 0F, 0.8726646F);
	      RBL1 = new ModelRenderer(this, 44, 95);
	      RBL1.addBox(-6F, -1F, -1F, 7, 2, 2);
	      RBL1.setRotationPoint(-4F, 18F, 8F);
	      RBL1.setTextureSize(64, 32);
	      RBL1.mirror = true;
	      setRotation(RBL1, 0F, 0.6981317F, 0.3490659F);
	      RBL2 = new ModelRenderer(this, 0, 103);
	      RBL2.addBox(-7F, 0F, -1.5F, 3, 5, 3);
	      RBL2.setRotationPoint(-4F, 18F, 8F);
	      RBL2.setTextureSize(64, 32);
	      RBL2.mirror = true;
	      setRotation(RBL2, 0F, 0.6981317F, 0.3490659F);
	      RBL3 = new ModelRenderer(this, 0, 82);
	      RBL3.addBox(-5.5F, 5.5F, -1F, 3, 4, 2);
	      RBL3.setRotationPoint(-4F, 18F, 8F);
	      RBL3.setTextureSize(64, 32);
	      RBL3.mirror = true;
	      setRotation(RBL3, 0F, 0.6981317F, 0.6981317F);
	      RBL4 = new ModelRenderer(this, 0, 70);
	      RBL4.addBox(-2.5F, 9F, -0.5F, 1, 3, 1);
	      RBL4.setRotationPoint(-4F, 18F, 8F);
	      RBL4.setTextureSize(64, 32);
	      RBL4.mirror = true;
	      setRotation(RBL4, 0F, 0.6981317F, 0.8726646F);
	      Sting = new ModelRenderer(this, 0, 122);
	      Sting.addBox(-1F, -1F, 12F, 2, 2, 1);
	      Sting.setRotationPoint(0F, 17F, 11F);
	      Sting.setTextureSize(64, 32);
	      Sting.mirror = true;
	      setRotation(Sting, -0.1745329F, 0F, 0F);
	      Head3 = new ModelRenderer(this, 43, 41);
	      Head3.addBox(-2.5F, -3.5F, -4.5F, 5, 10, 4);
	      Head3.setRotationPoint(0F, 16F, -1F);
	      Head3.setTextureSize(64, 32);
	      Head3.mirror = true;
	      setRotation(Head3, -0.5235988F, 0F, 0F);
	      ThxTop = new ModelRenderer(this, 23, 32);
	      ThxTop.addBox(-3F, -7F, 1F, 6, 2, 6);
	      ThxTop.setRotationPoint(0F, 17F, 0F);
	      ThxTop.setTextureSize(64, 32);
	      ThxTop.mirror = true;
	      setRotation(ThxTop, 0F, 0F, 0F);
	      ThxRW = new ModelRenderer(this, 0, 55);
	      ThxRW.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3);
	      ThxRW.setRotationPoint(-4F, 13F, 4F);
	      ThxRW.setTextureSize(64, 32);
	      ThxRW.mirror = true;
	      setRotation(ThxRW, 0F, 0F, -0.7853982F);
	      ThxLW = new ModelRenderer(this, 0, 55);
	      ThxLW.addBox(-1.5F, -1.5F, -1.5F, 3, 3, 3);
	      ThxLW.setRotationPoint(4F, 13F, 4F);
	      ThxLW.setTextureSize(64, 32);
	      ThxLW.mirror = true;
	      setRotation(ThxLW, 0F, 0F, 0.7853982F);
	      RWingBack = new ModelRenderer(this, 42, 26);
	      RWingBack.addBox(1.5F, -1F, 6F, 1, 1, 10);
	      RWingBack.setRotationPoint(-4F, 13F, 4F);
	      RWingBack.setTextureSize(64, 32);
	      RWingBack.mirror = true;
	      setRotation(RWingBack, 0F, 0F, -0.7853982F);
	      RWingMid = new ModelRenderer(this, 19, 41);
	      RWingMid.addBox(-1.5F, -1F, 0F, 3, 1, 17);
	      RWingMid.setRotationPoint(-4F, 13F, 4F);
	      RWingMid.setTextureSize(64, 32);
	      RWingMid.mirror = true;
	      setRotation(RWingMid, 0F, 0F, -0.7853982F);
	      RWingFront = new ModelRenderer(this, 42, 26);
	      RWingFront.addBox(-2.5F, -1F, 6F, 1, 1, 10);
	      RWingFront.setRotationPoint(-4F, 13F, 4F);
	      RWingFront.setTextureSize(64, 32);
	      RWingFront.mirror = true;
	      setRotation(RWingFront, 0F, 0F, -0.7853982F);
	      LWingBack = new ModelRenderer(this, 42, 26);
	      LWingBack.addBox(-2.5F, -1F, 6F, 1, 1, 10);
	      LWingBack.setRotationPoint(4F, 13F, 4F);
	      LWingBack.setTextureSize(64, 32);
	      LWingBack.mirror = true;
	      setRotation(LWingBack, 0F, 0F, 0.7853982F);
	      LWingMid = new ModelRenderer(this, 19, 41);
	      LWingMid.addBox(-1.5F, -1F, 0F, 3, 1, 17);
	      LWingMid.setRotationPoint(4F, 13F, 4F);
	      LWingMid.setTextureSize(64, 32);
	      LWingMid.mirror = true;
	      setRotation(LWingMid, 0F, 0F, 0.7853982F);
	      LWingFront = new ModelRenderer(this, 42, 26);
	      LWingFront.addBox(1.5F, -1F, 6F, 1, 1, 10);
	      LWingFront.setRotationPoint(4F, 13F, 4F);
	      LWingFront.setTextureSize(64, 32);
	      LWingFront.mirror = true;
	      setRotation(LWingFront, 0F, 0F, 0.7853982F);

	}

	@Override
	public void render(Entity entity, float limbSwing, float prevLimbSwing, float entityTickTime, float rotationYaw, float rotationPitch, float unitPixel) {
		super.render(entity, limbSwing, prevLimbSwing, entityTickTime, rotationYaw, rotationPitch, unitPixel);
		setRotationAngles(limbSwing, prevLimbSwing, entityTickTime, rotationYaw, rotationPitch, unitPixel, entity);
		GL11.glPushMatrix();
		GL11.glTranslated(0F, 0F, -0.5F);
		
		 Thx.render(unitPixel);
		    ThxS.render(unitPixel);
		    Ab.render(unitPixel);
		    AbF.render(unitPixel);
		    AbSide.render(unitPixel);
		    AbTop.render(unitPixel);
		    AbBack.render(unitPixel);
		    Head1.render(unitPixel);
		    Head2.render(unitPixel);
		    RMandible1.render(unitPixel);
		    RMandible2.render(unitPixel);
		    LMandible1.render(unitPixel);
		    LMandible2.render(unitPixel);
		    Eyes.render(unitPixel);
		    AntLE.render(unitPixel);
		    AntRE.render(unitPixel);
		    AntRS.render(unitPixel);
		    AntLS.render(unitPixel);
		    LBL1.render(unitPixel);
		    LBL2.render(unitPixel);
		    LBL3.render(unitPixel);
		    LBL4.render(unitPixel);
		    LML1.render(unitPixel);
		    LML2.render(unitPixel);
		    LML3.render(unitPixel);
		    LML4.render(unitPixel);
		    LFL1.render(unitPixel);
		    LFL2.render(unitPixel);
		    LFL3.render(unitPixel);
		    LFL4.render(unitPixel);
		    RFL1.render(unitPixel);
		    RFL2.render(unitPixel);
		    RFL3.render(unitPixel);
		    RFL4.render(unitPixel);
		    RML1.render(unitPixel);
		    RML2.render(unitPixel);
		    RML3.render(unitPixel);
		    RML4.render(unitPixel);
		    RBL1.render(unitPixel);
		    RBL2.render(unitPixel);
		    RBL3.render(unitPixel);
		    RBL4.render(unitPixel);
		    Sting.render(unitPixel);
		    Head3.render(unitPixel);
		    ThxTop.render(unitPixel);
		    ThxRW.render(unitPixel);
		    ThxLW.render(unitPixel);
		GL11.glPushMatrix();
		GL11.glEnable(GL11.GL_BLEND);
		RWingBack.render(unitPixel);
		RWingMid.render(unitPixel);
		RWingFront.render(unitPixel);
		LWingBack.render(unitPixel);
		LWingMid.render(unitPixel);
		LWingFront.render(unitPixel);
		GL11.glDisable(GL11.GL_BLEND);
		GL11.glPopMatrix();
		GL11.glPopMatrix();
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	@Override
	public void setRotationAngles(float limbSwing, float prevLimbSwing, float entityTickTime, float rotationYaw, float rotationPitch, float unitPixel, Entity entity) {
		super.setRotationAngles(limbSwing, prevLimbSwing, entityTickTime, rotationYaw, rotationPitch, unitPixel, entity);
		float heady = rotationYaw / (180F / (float) Math.PI);
		float headx = rotationPitch / (180F / (float) Math.PI) - 1.0F;
		Head1.rotateAngleY = heady;
		Head2.rotateAngleY = heady;
		Head3.rotateAngleY = heady;
		AntLS.rotateAngleY = heady;
		AntLE.rotateAngleY = heady;
		AntRS.rotateAngleY = heady;
		AntRE.rotateAngleY = heady;
		Eyes.rotateAngleY = heady;
		RMandible1.rotateAngleY = heady;
		RMandible2.rotateAngleY = heady;
		LMandible1.rotateAngleY = heady;
		LMandible2.rotateAngleY = heady;
		Head1.rotateAngleX = headx;
		Head2.rotateAngleX = headx;
		Head3.rotateAngleX = headx;
		AntLS.rotateAngleX = headx;
		AntLE.rotateAngleX = headx;
		AntRS.rotateAngleX = headx;
		AntRE.rotateAngleX = headx;
		Eyes.rotateAngleX = headx;
		RMandible1.rotateAngleX = headx;
		RMandible2.rotateAngleX = headx;
		LMandible1.rotateAngleX = headx;
		LMandible2.rotateAngleX = headx;
		EntityWorkerBee var8 = (EntityWorkerBee) entity;
		if (var8.onGround) {
			float legx1 = MathHelper.cos(limbSwing * 2.0F + (float) Math.PI) * 0.7F * prevLimbSwing;
			float legx2 = MathHelper.cos(limbSwing * 2.0F) * 0.7F * prevLimbSwing;
			LBL1.rotateAngleX = legx1 + 0.25F;
			LBL2.rotateAngleX = legx1 + 0.25F;
			LBL3.rotateAngleX = legx1 + 0.5F;
			LBL4.rotateAngleX = legx1 + 0.61F;
			LML1.rotateAngleX = legx2;
			LML2.rotateAngleX = legx2;
			LML3.rotateAngleX = legx2;
			LML4.rotateAngleX = legx2;
			LFL1.rotateAngleX = legx1 - 0.25F;
			LFL2.rotateAngleX = legx1 - 0.25F;
			LFL3.rotateAngleX = legx1 - 0.5F;
			LFL4.rotateAngleX = legx1 - 0.64F;
			RBL1.rotateAngleX = legx2 + 0.25F;
			RBL2.rotateAngleX = legx2 + 0.25F;
			RBL3.rotateAngleX = legx2 + 0.5F;
			RBL4.rotateAngleX = legx2 + 0.61F;
			RML1.rotateAngleX = legx1;
			RML2.rotateAngleX = legx1;
			RML3.rotateAngleX = legx1;
			RML4.rotateAngleX = legx1;
			RFL1.rotateAngleX = legx2 - 0.25F;
			RFL2.rotateAngleX = legx2 - 0.25F;
			RFL3.rotateAngleX = legx2 - 0.5F;
			RFL4.rotateAngleX = legx2 - 0.64F;
			RWingBack.rotateAngleY = -0.25F;
			RWingMid.rotateAngleY = -0.25F;
			RWingFront.rotateAngleY = -0.25F;
			LWingBack.rotateAngleY = 0.25F;
			LWingMid.rotateAngleY = 0.25F;
			LWingFront.rotateAngleY = 0.25F;
			RWingBack.rotateAngleX = 0F;
			RWingMid.rotateAngleX = 0F;
			RWingFront.rotateAngleX = 0F;
			LWingBack.rotateAngleX = 0F;
			LWingMid.rotateAngleX = 0F;
			LWingFront.rotateAngleX = 0F;
			Ab.rotateAngleX = -0.2F;
			AbF.rotateAngleX = -0.2F;
			AbSide.rotateAngleX = -0.2F;
			AbTop.rotateAngleX = -0.2F;
			AbBack.rotateAngleX = -0.2F;
			Sting.rotateAngleX = -0.2F;
		}
		if (var8.isFlying()) {
			LBL1.rotateAngleX = +0.25F;
			LBL2.rotateAngleX = +0.25F;
			LBL3.rotateAngleX = +0.5F;
			LBL4.rotateAngleX = +0.61F;
			LML1.rotateAngleX = 0F;
			LML2.rotateAngleX = 0F;
			LML3.rotateAngleX = 0F;
			LML4.rotateAngleX = 0F;
			LFL1.rotateAngleX = -0.25F;
			LFL2.rotateAngleX = -0.25F;
			LFL3.rotateAngleX = -0.5F;
			LFL4.rotateAngleX = -0.64F;
			RBL1.rotateAngleX = +0.25F;
			RBL2.rotateAngleX = +0.25F;
			RBL3.rotateAngleX = +0.5F;
			RBL4.rotateAngleX = +0.61F;
			RML1.rotateAngleX = 0F;
			RML2.rotateAngleX = 0F;
			RML3.rotateAngleX = 0F;
			RML4.rotateAngleX = 0F;
			RFL1.rotateAngleX = -0.25F;
			RFL2.rotateAngleX = -0.25F;
			RFL3.rotateAngleX = -0.5F;
			RFL4.rotateAngleX = -0.64F;
			RWingBack.rotateAngleY = -1.5F;
			RWingMid.rotateAngleY = -1.5F;
			RWingFront.rotateAngleY = -1.5F;
			LWingBack.rotateAngleY = 1.5F;
			LWingMid.rotateAngleY = 1.5F;
			LWingFront.rotateAngleY = 1.5F;
			RWingBack.rotateAngleX = var8.wingFloat;
			RWingMid.rotateAngleX = var8.wingFloat;
			RWingFront.rotateAngleX = var8.wingFloat;
			LWingBack.rotateAngleX = var8.wingFloat;
			LWingMid.rotateAngleX = var8.wingFloat;
			LWingFront.rotateAngleX = var8.wingFloat;
			Ab.rotateAngleX = -0.8F;
			AbF.rotateAngleX = -0.8F;
			AbSide.rotateAngleX = -0.8F;
			AbTop.rotateAngleX = -0.8F;
			AbBack.rotateAngleX = -0.8F;
			Sting.rotateAngleX = -0.8F;
		}
	}
}
